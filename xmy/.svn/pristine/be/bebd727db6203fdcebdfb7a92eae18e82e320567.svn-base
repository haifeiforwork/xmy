<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.zfj.xmy.common.persistence.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.zfj.xmy.common.persistence.pojo.Comment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="comment_conten" property="commentConten" jdbcType="VARCHAR" />
    <result column="comment_rank" property="commentRank" jdbcType="INTEGER" />
    <result column="comment_star" property="commentStar" jdbcType="INTEGER" />
    <result column="comment_type" property="commentType" jdbcType="INTEGER" />
    <result column="comment_status" property="commentStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="audit_time" property="auditTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_id, goods_id, user_id, comment_conten, comment_rank, comment_star, comment_type, 
    comment_status, create_time, audit_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.appdev.db.common.CriteriaParameter" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `comment`
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.appdev.db.common.CriteriaParameter" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `comment`
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.appdev.db.common.CriteriaParameter" >
    delete from `comment`
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.appdev.db.common.CriteriaParameter" resultType="java.lang.Integer" >
    select count(*) from `comment`
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update `comment`
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.commentConten != null" >
        comment_conten = #{record.commentConten,jdbcType=VARCHAR},
      </if>
      <if test="record.commentRank != null" >
        comment_rank = #{record.commentRank,jdbcType=INTEGER},
      </if>
      <if test="record.commentStar != null" >
        comment_star = #{record.commentStar,jdbcType=INTEGER},
      </if>
      <if test="record.commentType != null" >
        comment_type = #{record.commentType,jdbcType=INTEGER},
      </if>
      <if test="record.commentStatus != null" >
        comment_status = #{record.commentStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditTime != null" >
        audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update `comment`
    set id = #{record.id,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      goods_id = #{record.goodsId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      comment_conten = #{record.commentConten,jdbcType=VARCHAR},
      comment_rank = #{record.commentRank,jdbcType=INTEGER},
      comment_star = #{record.commentStar,jdbcType=INTEGER},
      comment_type = #{record.commentType,jdbcType=INTEGER},
      comment_status = #{record.commentStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from `comment`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `comment`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zfj.xmy.common.persistence.pojo.Comment" useGeneratedKeys="true" keyProperty="id" >
    insert into `comment` (order_id, goods_id, user_id, 
      comment_conten, comment_rank, comment_star, 
      comment_type, comment_status, create_time, 
      audit_time, update_time)
    values (#{orderId,jdbcType=BIGINT}, #{goodsId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{commentConten,jdbcType=VARCHAR}, #{commentRank,jdbcType=INTEGER}, #{commentStar,jdbcType=INTEGER}, 
      #{commentType,jdbcType=INTEGER}, #{commentStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{auditTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zfj.xmy.common.persistence.pojo.Comment" useGeneratedKeys="true" keyProperty="id" >
    insert into `comment`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="commentConten != null" >
        comment_conten,
      </if>
      <if test="commentRank != null" >
        comment_rank,
      </if>
      <if test="commentStar != null" >
        comment_star,
      </if>
      <if test="commentType != null" >
        comment_type,
      </if>
      <if test="commentStatus != null" >
        comment_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="auditTime != null" >
        audit_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="commentConten != null" >
        #{commentConten,jdbcType=VARCHAR},
      </if>
      <if test="commentRank != null" >
        #{commentRank,jdbcType=INTEGER},
      </if>
      <if test="commentStar != null" >
        #{commentStar,jdbcType=INTEGER},
      </if>
      <if test="commentType != null" >
        #{commentType,jdbcType=INTEGER},
      </if>
      <if test="commentStatus != null" >
        #{commentStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditTime != null" >
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zfj.xmy.common.persistence.pojo.Comment" >
    update `comment`
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="commentConten != null" >
        comment_conten = #{commentConten,jdbcType=VARCHAR},
      </if>
      <if test="commentRank != null" >
        comment_rank = #{commentRank,jdbcType=INTEGER},
      </if>
      <if test="commentStar != null" >
        comment_star = #{commentStar,jdbcType=INTEGER},
      </if>
      <if test="commentType != null" >
        comment_type = #{commentType,jdbcType=INTEGER},
      </if>
      <if test="commentStatus != null" >
        comment_status = #{commentStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditTime != null" >
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zfj.xmy.common.persistence.pojo.Comment" >
    update `comment`
    set order_id = #{orderId,jdbcType=BIGINT},
      goods_id = #{goodsId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      comment_conten = #{commentConten,jdbcType=VARCHAR},
      comment_rank = #{commentRank,jdbcType=INTEGER},
      comment_star = #{commentStar,jdbcType=INTEGER},
      comment_type = #{commentType,jdbcType=INTEGER},
      comment_status = #{commentStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
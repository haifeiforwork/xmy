package com.zfj.xmy.order.service.common.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.xiaoleilu.hutool.json.JSONObject;
import com.xiaoleilu.hutool.util.ObjectUtil;
import com.zfj.base.exception.BusinessException;
import com.zfj.base.util.common.StringUtil;
import com.zfj.xmy.common.persistence.dao.OrderMapper;
import com.zfj.xmy.common.persistence.pojo.Order;
import com.zfj.xmy.order.service.common.CommonOrderService;
import com.zfj.xmy.util.BaiduUtil;
import com.zfj.xmy.util.LogisticsUtil;

@Service
public class CommonOrderServiceImpl implements CommonOrderService {

	@Autowired
	private OrderMapper orderMapper;
	
	@Override
	public JSONObject getOrderLogisticsInfo(Long orderId) {
		Order order = orderMapper.selectByPrimaryKey(orderId);
		if (ObjectUtil.isNull(order)) {
			throw new BusinessException("订单信息不正确") ;
		}
		
		String logisticsNo = order.getLogisticsNo();
		if (StringUtil.isEmpty(logisticsNo)) {
			throw new BusinessException("物流信息不存在") ;
		}
		try {
			String res = LogisticsUtil.getOrderStatus(logisticsNo);
			if (StringUtil.isEmpty(res)) {
				throw new BusinessException("查询物流信息出错") ;
			}
			JSONObject jo = new JSONObject(res);
			jo.put("logisticsNo", logisticsNo);
			JSONObject gps = jo.getJSONObject("gps");
			//地址信息不空则获取地址
			if (ObjectUtil.isNotNull(gps)) {
				String lat = gps.getStr("lat");
				String lng = gps.getStr("lon");
				String baidures = BaiduUtil.getAdressByGeo(lat, lng);
				try {
					JSONObject baiduJo = new JSONObject(baidures);
					if (0 == baiduJo.getInt("status")) {
						jo.put("address", baiduJo.getJSONObject("result").getStr("formatted_address"));
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			return jo;
		} catch (Exception e) {
			e.printStackTrace();
			throw new BusinessException("查询物流信息出错了") ;
		}
	}

}

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.zfj.xmy.common.persistence.dao.JiguangPushRecordMapper" >
  <resultMap id="BaseResultMap" type="com.zfj.xmy.common.persistence.pojo.JiguangPushRecord" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="VARCHAR" />
    <result column="create_timestamp" property="createTimestamp" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, content, `result`, create_timestamp
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.appdev.db.common.CriteriaParameter" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jiguang_push_record
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.appdev.db.common.CriteriaParameter" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jiguang_push_record
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.appdev.db.common.CriteriaParameter" >
    delete from jiguang_push_record
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.appdev.db.common.CriteriaParameter" resultType="java.lang.Integer" >
    select count(*) from jiguang_push_record
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jiguang_push_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null" >
        `result` = #{record.result,jdbcType=VARCHAR},
      </if>
      <if test="record.createTimestamp != null" >
        create_timestamp = #{record.createTimestamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jiguang_push_record
    set id = #{record.id,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      `result` = #{record.result,jdbcType=VARCHAR},
      create_timestamp = #{record.createTimestamp,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from jiguang_push_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from jiguang_push_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zfj.xmy.common.persistence.pojo.JiguangPushRecord" >
    insert into jiguang_push_record (id, user_id, content, 
      `result`, create_timestamp)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{result,jdbcType=VARCHAR}, #{createTimestamp,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zfj.xmy.common.persistence.pojo.JiguangPushRecord" >
    insert into jiguang_push_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="result != null" >
        `result`,
      </if>
      <if test="createTimestamp != null" >
        create_timestamp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="createTimestamp != null" >
        #{createTimestamp,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zfj.xmy.common.persistence.pojo.JiguangPushRecord" >
    update jiguang_push_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        `result` = #{result,jdbcType=VARCHAR},
      </if>
      <if test="createTimestamp != null" >
        create_timestamp = #{createTimestamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zfj.xmy.common.persistence.pojo.JiguangPushRecord" >
    update jiguang_push_record
    set user_id = #{userId,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      `result` = #{result,jdbcType=VARCHAR},
      create_timestamp = #{createTimestamp,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
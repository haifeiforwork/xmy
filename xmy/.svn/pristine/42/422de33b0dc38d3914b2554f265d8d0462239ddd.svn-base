package com.zfj.xmy.wap.web.controller.activity;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.zfj.xmy.activity.persistence.common.pojo.dto.AppBuyAndPresentOutDto;
import com.zfj.xmy.activity.persistence.common.pojo.dto.LimitActivityDir;
import com.zfj.xmy.activity.service.common.LimitActivityService;
import com.zfj.xmy.common.DateUtils;
import com.zfj.xmy.common.SystemConstant;
import com.zfj.xmy.common.persistence.pojo.AdImage;

@Controller
@RequestMapping("/activity")
public class ActivityController {
	
	@Autowired
	private LimitActivityService limitActivityService;
	
	/**
	 * 开抢啦
	 * @param request
	 * @return
	 * @throws ParseException 
	 */
	@RequestMapping("/findActivity")
	public ModelAndView findActivity(HttpServletRequest request) throws ParseException{
		List<LimitActivityDir> list = limitActivityService.findLimitActivityList(null);
		LimitActivityDir  iceActivity = new  LimitActivityDir();  //每日秒杀
		LimitActivityDir  daydayActivity = new  LimitActivityDir();  //天天特价
		LimitActivityDir  weekActivity = new  LimitActivityDir();  //每周特价
		LimitActivityDir  woleActivity = new  LimitActivityDir();  //整件惠
		for (LimitActivityDir limitActivityDir : list) {
			if (limitActivityDir.getType() == SystemConstant.LIMITACTIVITY.FREEZING) {
				iceActivity = limitActivityDir;
			}
			if (limitActivityDir.getType() == SystemConstant.LIMITACTIVITY.DAYDAY) {
				daydayActivity = limitActivityDir;
			}
			if (limitActivityDir.getType() == SystemConstant.LIMITACTIVITY.WEEKWEEK) {
				weekActivity = limitActivityDir;
			} 
			if (limitActivityDir.getType() == SystemConstant.LIMITACTIVITY.WOLE) {
				woleActivity = limitActivityDir;
			}
		}
		request.setAttribute("iceActivity", iceActivity);
		request.setAttribute("daydayActivity", daydayActivity);
		request.setAttribute("weekActivity", weekActivity);
		request.setAttribute("woleActivity", woleActivity);
		List<AppBuyAndPresentOutDto> buyAndPresent = limitActivityService.findBuyAndPersentActivity(); //买即赠
		request.setAttribute("buyAndPresent", buyAndPresent);
		List<AdImage> topImg = limitActivityService.findActivityImage(SystemConstant.AdInfoImage.BIG_IMAGE); //大图
		request.setAttribute("topImg", topImg);
		request.setAttribute("twelveOfTomorrow", DateUtils.getTwelveOfTomorrow().getTime());  //明天12点的结束时间
		request.setAttribute("dayEnd", DateUtils.getDayEnd().getTime()); //当天的结束时间
		request.setAttribute("endDayOfWeek", DateUtils.getEndDayOfWeek().getTime()); //本周的结束时间
		
		Map<String, Object> data=new HashMap<String, Object>();
		data.putAll(getLimitData());
		
		//存入当前时间
		Date date = new Date();
		SimpleDateFormat sdf = new SimpleDateFormat("M月d日");

		long mill = 0;
		int hours = date.getHours();
		mill += hours * 60 * 60 * 1000;
		int minutes = date.getMinutes();
		mill += minutes * 60 * 1000;
		int seconds = date.getSeconds();
		mill += seconds * 1000;
		System.out.println("当前时间毫秒数:" + mill);
		request.setAttribute("currMill", mill);
		String curr = sdf.format(date);
		request.setAttribute("curr", curr);
		
		Date yesterday=new Date();//取时间
		Calendar calendar = new GregorianCalendar();
		calendar.setTime(yesterday);
		calendar.add(calendar.DATE, -1);//把日期往后增加一天.整数往后推,负数往前移动
		yesterday=calendar.getTime(); //这个时间就是日期往后推一天的结果 
		SimpleDateFormat formatter = new SimpleDateFormat("M月d日");
		String yesterdayStr = formatter.format(yesterday);
		request.setAttribute("yesterday", yesterdayStr);
		
		request.setAttribute("data", data);
		request.setAttribute("millis", getDate());
		request.setAttribute("sum", getWeek());
		
		return new ModelAndView("/activity/activity");
	}
	
	/**
	 * 每日秒杀的当前与结束时间
	 * @return
	 */
	private Map<String,Long> getLimitData(){
		
		Map<String,Long> map = new HashMap<String,Long>();
		Date date = new Date();
		Calendar cal = Calendar.getInstance();
		cal.setTime(date);
		cal.set(Calendar.HOUR_OF_DAY, 12);
		cal.set(Calendar.MINUTE, 0);
		cal.set(Calendar.SECOND, 0);
		if(cal.getTime().getTime() < date.getTime()){
			cal.add(Calendar.DAY_OF_YEAR, 1);
		}
		map.put("nowTime", date.getTime());
		map.put("endTime", cal.getTime().getTime());
		return map;
	}
	
	/**
	 * 天天特价的当天剩余时间
	 * @return
	 */
	private long getDate(){
		
		Calendar c = Calendar.getInstance();
		long now = c.getTimeInMillis();

		c.add(Calendar.DAY_OF_MONTH, 1);
		c.set(Calendar.HOUR_OF_DAY, 0);
		c.set(Calendar.MINUTE, 0);
		c.set(Calendar.SECOND, 0);
		c.set(Calendar.MILLISECOND, 0);

		long millis = c.getTimeInMillis() - now;
		return millis;
	}
	
	
	/**
	 * 每周特价倒计时
	 * @return
	 * @throws ParseException 
	 */
	private long getWeek() throws ParseException{
	     Calendar c = Calendar.getInstance();  
	     long dayWeek = c.get(Calendar.DAY_OF_WEEK);// 获得当前日期是一个星期的第几天
	     if (dayWeek==1) {  
	    	 dayWeek=7; 
	     }else{
	    	 dayWeek=dayWeek-1;
	     }
	     long day=7-dayWeek;
	     long sum1;
	     sum1=day*24*60*60*1000+getDate();
	     return sum1;
	}
	
	@RequestMapping("/{url}")
	public String toActivityDetails(@PathVariable("url") String url, ModelMap model) {
		model.addAttribute("url", url);
		return "activity/showActivity";
	}
	
	@RequestMapping("/html/{url}")
	public String activityHtml(@PathVariable("url") String url) {
		return url + ".html";
	}
	
}

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.zfj.xmy.common.persistence.dao.LogMapper" >
  <resultMap id="BaseResultMap" type="com.zfj.xmy.common.persistence.pojo.Log" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="remote_addr" property="remoteAddr" jdbcType="VARCHAR" />
    <result column="request_uri" property="requestUri" jdbcType="VARCHAR" />
    <result column="method" property="method" jdbcType="VARCHAR" />
    <result column="params" property="params" jdbcType="VARCHAR" />
    <result column="exception" property="exception" jdbcType="VARCHAR" />
    <result column="operate_date" property="operateDate" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, `type`, title, remote_addr, request_uri, `method`, params, `exception`, operate_date, 
    user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.appdev.db.common.CriteriaParameter" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.appdev.db.common.CriteriaParameter" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.appdev.db.common.CriteriaParameter" >
    delete from log
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.appdev.db.common.CriteriaParameter" resultType="java.lang.Integer" >
    select count(*) from log
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.remoteAddr != null" >
        remote_addr = #{record.remoteAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.requestUri != null" >
        request_uri = #{record.requestUri,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null" >
        `method` = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.params != null" >
        params = #{record.params,jdbcType=VARCHAR},
      </if>
      <if test="record.exception != null" >
        `exception` = #{record.exception,jdbcType=VARCHAR},
      </if>
      <if test="record.operateDate != null" >
        operate_date = #{record.operateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update log
    set id = #{record.id,jdbcType=BIGINT},
      `type` = #{record.type,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      remote_addr = #{record.remoteAddr,jdbcType=VARCHAR},
      request_uri = #{record.requestUri,jdbcType=VARCHAR},
      `method` = #{record.method,jdbcType=VARCHAR},
      params = #{record.params,jdbcType=VARCHAR},
      `exception` = #{record.exception,jdbcType=VARCHAR},
      operate_date = #{record.operateDate,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="sqlcriteria.util.Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zfj.xmy.common.persistence.pojo.Log" useGeneratedKeys="true" keyProperty="id" >
    insert into log (`type`, title, remote_addr, 
      request_uri, `method`, params, 
      `exception`, operate_date, user_id
      )
    values (#{type,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{remoteAddr,jdbcType=VARCHAR}, 
      #{requestUri,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, #{params,jdbcType=VARCHAR}, 
      #{exception,jdbcType=VARCHAR}, #{operateDate,jdbcType=TIMESTAMP}, #{userId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zfj.xmy.common.persistence.pojo.Log" useGeneratedKeys="true" keyProperty="id" >
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="type != null" >
        `type`,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="remoteAddr != null" >
        remote_addr,
      </if>
      <if test="requestUri != null" >
        request_uri,
      </if>
      <if test="method != null" >
        `method`,
      </if>
      <if test="params != null" >
        params,
      </if>
      <if test="exception != null" >
        `exception`,
      </if>
      <if test="operateDate != null" >
        operate_date,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="remoteAddr != null" >
        #{remoteAddr,jdbcType=VARCHAR},
      </if>
      <if test="requestUri != null" >
        #{requestUri,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="params != null" >
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="exception != null" >
        #{exception,jdbcType=VARCHAR},
      </if>
      <if test="operateDate != null" >
        #{operateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zfj.xmy.common.persistence.pojo.Log" >
    update log
    <set >
      <if test="type != null" >
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="remoteAddr != null" >
        remote_addr = #{remoteAddr,jdbcType=VARCHAR},
      </if>
      <if test="requestUri != null" >
        request_uri = #{requestUri,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        `method` = #{method,jdbcType=VARCHAR},
      </if>
      <if test="params != null" >
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="exception != null" >
        `exception` = #{exception,jdbcType=VARCHAR},
      </if>
      <if test="operateDate != null" >
        operate_date = #{operateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zfj.xmy.common.persistence.pojo.Log" >
    update log
    set `type` = #{type,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      remote_addr = #{remoteAddr,jdbcType=VARCHAR},
      request_uri = #{requestUri,jdbcType=VARCHAR},
      `method` = #{method,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      `exception` = #{exception,jdbcType=VARCHAR},
      operate_date = #{operateDate,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
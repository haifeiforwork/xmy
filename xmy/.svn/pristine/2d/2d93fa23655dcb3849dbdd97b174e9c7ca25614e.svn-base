package com.zfj.xmy.pc.web.controller.center;

import java.io.UnsupportedEncodingException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.web.bind.ServletRequestDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.appdev.db.common.pojo.PageBean;
import com.xiaoleilu.hutool.util.ObjectUtil;
import com.zfj.base.commons.mini.bean.RespData;
import com.zfj.base.encryption.MD5Utils;
import com.zfj.base.exception.BusinessException;
import com.zfj.base.util.common.StringUtil;
import com.zfj.xmy.activity.service.pc.PcCouponService;
import com.zfj.xmy.activity.service.pc.PcPointsService;
import com.zfj.xmy.comment.service.pc.PcCommentService;
import com.zfj.xmy.common.SystemConstant;
import com.zfj.xmy.common.persistence.pojo.Comment;
import com.zfj.xmy.common.persistence.pojo.Feedback;
import com.zfj.xmy.common.persistence.pojo.Goods;
import com.zfj.xmy.common.persistence.pojo.Order;
import com.zfj.xmy.common.persistence.pojo.User;
import com.zfj.xmy.common.persistence.pojo.UserAddrees;
import com.zfj.xmy.common.persistence.pojo.UserAnswer;
import com.zfj.xmy.common.persistence.pojo.UserInfo;
import com.zfj.xmy.common.persistence.pojo.UserQuestion;
import com.zfj.xmy.common.persistence.pojo.UserSpendPoints;
import com.zfj.xmy.common.service.CommonShopingCardService;
import com.zfj.xmy.goods.service.pc.PcGoodsService;
import com.zfj.xmy.order.persistence.app.pojo.dto.GuessLikeGoodsOutVO;
import com.zfj.xmy.order.service.app.BrowsedGoodsService;
import com.zfj.xmy.order.service.pc.PcOrderService;
import com.zfj.xmy.pc.web.Lijie;
import com.zfj.xmy.pc.web.common.SessionInfo;
import com.zfj.xmy.pc.web.controller.BaseController;
import com.zfj.xmy.user.service.pc.PcUserAddressService;
import com.zfj.xmy.user.service.pc.PcUserService;
import com.zfj.xmy.user.service.pc.UserCenterService;
@Lijie
@RestController
@RequestMapping("/center")
public class UserCenterController extends BaseController{
	
	@Autowired
	private UserCenterService userCenterService;
	
	@Autowired
	private PcOrderService pcOrderService;
	
	@Autowired
	private PcUserAddressService pcUserAddressService;
	
	@Autowired
	private PcPointsService pcPointsService;
	
	@Autowired
	private PcCommentService pcCommentService;
	
	@Autowired
	private PcCouponService pcCouponService;
	
	@Autowired
	private PcUserService pcUserService;
	
	@Autowired
	private BrowsedGoodsService browsedGoodsService;
	
	@Autowired
	private CommonShopingCardService commonShopingCardService;
	
	@Autowired
	private PcGoodsService goodsService;
	
	//问题分类
	private final static int ONE=1;
	private final static int TWO=2;
	private final static int THREE=3;
	
	//近三个月，近一年
	private final static int TRIMESTER=-3;
	private final static int YEAR=-12;
	
	//每页显示条目数
	private final static int PAGESIZE=5;
	
	//初始值
	private final static int INITIAL=1;
	
	//状态0.未解决 1.已解决
	private final static int STATUS=0;
	
	// 自定义类型转换器  
	@InitBinder  
	public void initBinder(HttpServletRequest request, ServletRequestDataBinder binder) throws Exception {  
	    binder.registerCustomEditor(Date.class,  
	            new CustomDateEditor(new SimpleDateFormat("yyyy 年MM 月dd"), true));  
	} 
	
	/**
	 * @Description 积分明细
	 * @param pageIndex
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/toPointsDetail")
	public ModelAndView toPointsDetail(int pageIndex,int set,HttpServletRequest request){
		SessionInfo sessionInfo = SessionInfo.get();
		PageBean pageBean=new PageBean();
		pageBean.setPageIndex(pageIndex);
		pageBean.setPageSize(PAGESIZE);
		pcPointsService.findUserSpendPointsByPage(sessionInfo.getUserId(), pageBean);
		request.setAttribute("pageBean",pageBean) ;
		UserInfo userInfo=pcPointsService.findUserinfo(sessionInfo.getUserId());
		request.setAttribute("points", userInfo.getAccPoints());
		request.setAttribute("list", pageBean.getData());
		request.setAttribute("set", set);
		return new ModelAndView("/center/center_points");
	}
	
	/**
	 * @Description 用户信息更新页面
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/toUpdate")
	public ModelAndView toUpdateUserinfo(int set,HttpServletRequest request){
		SessionInfo sessionInfo = SessionInfo.get();
		UserInfo userInfo=userCenterService.findUserinfo(sessionInfo.getUserId());
		request.setAttribute("userinfo", userInfo);
		request.setAttribute("set", set);
		return new ModelAndView("/center/center_userinfo");
	}
	/**
	 * @Description 用户信息更新
	 * @param userInfo
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/update")
	public ModelAndView updateUserinfo(UserInfo userInfo,HttpServletRequest request){
		SessionInfo sessionInfo = SessionInfo.get();
		userInfo.setId(sessionInfo.getUserId());
		userCenterService.updateUserInfo(userInfo);
		UserInfo findUserinfo = userCenterService.findUserinfo(sessionInfo.getUserId());
		request.setAttribute("userinfo", findUserinfo);
		return new ModelAndView("/center/center_userinfo");
	}
	
	/**
	 * @Description 用户头像更新页面
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/toUpdateImg")
	public ModelAndView toUpdateUserImg(int set,HttpServletRequest request){
		SessionInfo sessionInfo = SessionInfo.get();
		UserInfo userInfo=userCenterService.findUserinfo(sessionInfo.getUserId());
		request.setAttribute("userinfo", userInfo);
		request.setAttribute("set", set);
		return new ModelAndView("/center/center_user_img");
	}
	
	/**
	 * @Description 用户头像更新页面
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/updateImg")
	public ModelAndView updateUserImg(@RequestParam("imgs") String imgs, HttpServletRequest request){
		SessionInfo sessionInfo = SessionInfo.get();
		UserInfo userInfo=new UserInfo();
		userInfo.setId(sessionInfo.getUserId());
		userInfo.setAvatar(imgs);
		userCenterService.updateImg(userInfo);
		return new ModelAndView("redirect:/center/toUpdate?set=5");
	}
	
	/**
	 * @Description 修改密码页面
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/toChangePwd")
	public ModelAndView toChangePwd(int set,HttpServletRequest request){
		request.setAttribute("set", set);
		return new ModelAndView("/center/center_changePwd");
	}
	
	/**
	 * @Description 修改密码
	 * @param user
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/changePwd")
	public ModelAndView updateUser(User user,String pwd,HttpServletRequest request){
		SessionInfo sessionInfo = SessionInfo.get();
		String oldPwd=userCenterService.findUser(sessionInfo.getUserId()).getPassword();;
		if(oldPwd.equals(MD5Utils.encodeString(user.getPassword()))){
			user.setId(sessionInfo.getUserId());
			user.setPassword(MD5Utils.encodeString(pwd));
			userCenterService.updateUser(user);
			request.setAttribute("msg", "修改成功！");
		}else{
			request.setAttribute("msg", "原始密码不正确！");
		}
		return new ModelAndView("/center/center_changePwd");
	}

	/**
	 * @Description 邮箱验证页面
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/toSafetyEmail")
	public ModelAndView toSafetyEmail(int set,HttpServletRequest request){
		SessionInfo sessionInfo=SessionInfo.get();
		UserInfo userInfo=userCenterService.findUserinfo(sessionInfo.getUserId());
		request.setAttribute("userInfo", userInfo);
		request.setAttribute("set", set);
		return new ModelAndView("/center/safety/center_safety_email");
	}
	
	/**
	 * @Description 手机验证页面
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/toSafetyPhone")
	public ModelAndView toSafetyPhone(int set,HttpServletRequest request){
		SessionInfo sessionInfo=SessionInfo.get();
		UserInfo userInfo=userCenterService.findUserinfo(sessionInfo.getUserId());
		
		request.setAttribute("userInfo", userInfo);
		request.setAttribute("set", set);
		
		return new ModelAndView("/center/safety/center_safety_phone");
	}
	
	/**
	 * @Description 更改安全手机页面
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/safetyPhone")
	public RespData safetyPhone(@RequestParam("mobilePhone") String mobilePhone,@RequestParam("mobileCode") String mobileCode,HttpServletRequest request){
		SessionInfo sessionInfo=SessionInfo.get();
		RespData respData=new RespData();
		try {
			userCenterService.updatePhone(sessionInfo.getUserId(), mobilePhone, mobileCode);
		} catch (Exception e) {
			respData.setResultCode(RespData.CODE_FAILURE) ;
			respData.setData(e instanceof BusinessException ? e.getMessage() : "更改失败") ;
			return respData ;
		}
		return respData;
	}
	
	/**
	 * 图片验证码的验证及发送短信
	 * @param vcode
	 * @param session
	 * @return
	 */
	@RequestMapping("/valid")
	public RespData validCode(@RequestParam("mobilePhone") String mobilePhone){
		RespData respData = new RespData() ;
		respData.setResultCode(RespData.CODE_FAILURE) ;
		
		//2、验证手机号码
		if(StringUtil.isEmpty(mobilePhone)){
			respData.setData("手机号码不能为空") ;
			return respData ;
		}
		//3、发送手机校验码
		try {
			pcUserService.sendMobileCode(mobilePhone) ;
		} catch (Exception e) {
			e.printStackTrace() ;
			respData.setData(e instanceof BusinessException ? e.getMessage() : "发送手机校验码失败") ;
			return respData ;
		}
		return respData ;
	}
	
	/**
	 * @Description 安全问题验证页面
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/toSafetyQuestion")
	public ModelAndView toSafetyQuestion(int set,HttpServletRequest request){
		SessionInfo sessionInfo=SessionInfo.get();
		UserInfo userInfo=userCenterService.findUserinfo(sessionInfo.getUserId());
		
		List<UserQuestion> one=userCenterService.findQuestion(ONE);
		request.setAttribute("one", one);
		
		List<UserQuestion> two=userCenterService.findQuestion(TWO);
		request.setAttribute("two", two);
		
		List<UserQuestion> three=userCenterService.findQuestion(THREE);
		request.setAttribute("three", three);
		
		request.setAttribute("set", set);
		request.setAttribute("userInfo", userInfo);
		return new ModelAndView("/center/safety/center_safety_question");
	}
	
	/**
	 * @Description 安全验证 安全问题
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/safety")
	public ModelAndView safety(HttpServletRequest request){
		SessionInfo sessionInfo = SessionInfo.get();
		UserAnswer userAnswer=new UserAnswer();
		if(userCenterService.findAnswer(sessionInfo.getUserId()).size()==0){
			String one=request.getParameter("one");
			String oneAn=request.getParameter("oneAn");
			userAnswer.setUserId(sessionInfo.getUserId());
			userAnswer.setQuestionId(Long.parseLong(one));
			userAnswer.setAnswer(oneAn);
			userCenterService.insertAnswer(userAnswer);
			
			String two=request.getParameter("two");
			String twoAn=request.getParameter("twoAn");
			userAnswer.setUserId(sessionInfo.getUserId());
			userAnswer.setQuestionId(Long.parseLong(two));
			userAnswer.setAnswer(twoAn);
			userCenterService.insertAnswer(userAnswer);
			
			String three=request.getParameter("three");
			String threeAn=request.getParameter("threeAn");
			userAnswer.setUserId(sessionInfo.getUserId());
			userAnswer.setQuestionId(Long.parseLong(three));
			userAnswer.setAnswer(threeAn);
			userCenterService.insertAnswer(userAnswer);
		}
		
		return new ModelAndView("redirect:/center/toSafetyQuestion?set=8");
	}
	
	/**
	 * @Description 个人中心首页
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/centerIndex")
	@Lijie
	public ModelAndView centerIndex(int set,HttpServletRequest request){
		SessionInfo sessionInfo = SessionInfo.get();
		//会员信息
		UserInfo userInfo=userCenterService.findUserinfo(sessionInfo.getUserId());
		request.setAttribute("userinfo", userInfo);
		String phone="";
		String email="";
		if(userInfo!=null){
		    phone=userInfo.getMobilePhone();
	        email=userInfo.getEmail();
		}
		
		String level="";
		if((phone==null||phone.isEmpty())&&(email==null||email.isEmpty())){
			level="较低";
		}else if((phone==null||phone.isEmpty())||(email==null||email.isEmpty())){
			level="中等";
		}else{
			level="较高";
		}
		request.setAttribute("level", level);
		
		//订单统计信息
		int pay=pcOrderService.findOrderStatusCount(sessionInfo.getUserId(), SystemConstant.ORDER.STATUS_UNPAID);
		int delivery=pcOrderService.findOrderStatusCount(sessionInfo.getUserId(), SystemConstant.ORDER.STATUS_FINISH_DELIVERY);
		int pick=pcOrderService.findOrderDeliveryCount(sessionInfo.getUserId());
		int evaluate=pcOrderService.findOrderStatusCount(sessionInfo.getUserId(), SystemConstant.ORDER.STATUS_WAITTING_COMMENT);
		List<Integer> list=new ArrayList<Integer>();
		list.add(pay);
		list.add(delivery);
		list.add(pick);
		list.add(evaluate);
		
		//猜你喜欢
		//List<GuessLikeGoodsOutVO> guess=browsedGoodsService.findGuessLikeGoods(sessionInfo.getUserId());
		PageBean pageBean = new PageBean();
		pageBean.setPageSize(8);
		
		//会员推荐
		request.setAttribute("list", list);
		request.setAttribute("set", set);
		request.setAttribute("guess", goodsService.findYouLike(pageBean));
		request.setAttribute("vipRecommend", browsedGoodsService.findVipRecommend());
		return new ModelAndView("/center/center_index");
	}
	
	/**
	 * @Description 收货地址页面
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/toAddress")
	public ModelAndView toAddress(int set,HttpServletRequest request){
		SessionInfo sessionInfo = SessionInfo.get();
		List<UserAddrees> userAddrees=pcUserAddressService.findAddressByUserId(sessionInfo.getUserId());
		request.setAttribute("userAddrees", userAddrees);
		request.setAttribute("set", set);
		return new ModelAndView("/center/center_address");
	}
	
	/**
	 * @Description 添加收货地址
	 * @param userAddrees
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/addAddress")
	public ModelAndView addAddress(UserAddrees userAddrees){
		SessionInfo sessionInfo = SessionInfo.get();
		userAddrees.setUserId(sessionInfo.getUserId());
		pcUserAddressService.addUserAddrees(userAddrees);
		return new ModelAndView("redirect:/center/toAddress?set=6");
	}
	
	/**
	 * @Description 删除收货地址
	 * @param id
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/delAddress")
	public ModelAndView delAddress(Long id){
		pcUserAddressService.deleteAddrees(id);
		return new ModelAndView("redirect:/center/toAddress?set=6");
	}
	
	/**
	 * @Description 根据id查找收货地址
	 * @param id
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/findAddress")
	public ModelAndView findAddress(Long id,HttpServletRequest request){
		UserAddrees userAddrees=pcUserAddressService.findAddrees(id);
		request.setAttribute("userAddrees", userAddrees);
		request.setAttribute("set", 6);
		return new ModelAndView("/center/center_edit_address");
	}
	
	/**
	 * @Description 更新收货地址
	 * @param userAddrees
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/updateAddress")
	public ModelAndView updateAddress(UserAddrees userAddrees){
		pcUserAddressService.updateAddrees(userAddrees);
		return new ModelAndView("redirect:/center/toAddress?set=6");
	}
	
	/**
	 * @Description 设置默认收货地址
	 * @param aId
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/default")
	public ModelAndView defaultAddress(Long aId){
		SessionInfo sessionInfo = SessionInfo.get();
		pcUserAddressService.defaultAddress(aId,sessionInfo.getUserId());
		return new ModelAndView("redirect:/center/toAddress?set=6");
	}
	
	/**
	 * @Description 退款列表
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/toRefund")
	public ModelAndView toRefund(int set,int pageIndex,HttpServletRequest request){
		SessionInfo sessionInfo = SessionInfo.get();
		PageBean pageBean=new PageBean();
		pageBean.setPageIndex(pageIndex);
		pageBean.setPageSize(PAGESIZE);
		
		pcOrderService.findRefundOrderByPage(sessionInfo.getUserId(), pageBean);
		
		@SuppressWarnings("unchecked")
		List<Order> list=(List<Order>) pageBean.getData();
		request.setAttribute("list", list);
		request.setAttribute("pageBean", pageBean);
		
		request.setAttribute("set", set);
		return new ModelAndView("/center/center_refund");
	}
	
	/**
	 * @Description 近三个月账户记录
	 * @param pageIndex
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/toBalance")
	public ModelAndView toBalance(int set,int pageIndex,HttpServletRequest request){
		SessionInfo sessionInfo=SessionInfo.get();
		PageBean pageBean=new PageBean();
		pageBean.setPageIndex(pageIndex);
		pageBean.setPageSize(PAGESIZE);
		
		userCenterService.findRecordByPage(sessionInfo.getUserId(), pageBean,TRIMESTER);
		
		@SuppressWarnings("unchecked")
		List<UserSpendPoints> list=(List<UserSpendPoints>) pageBean.getData();
		//获取用户余额
		UserInfo userInfo=userCenterService.findUserinfo(sessionInfo.getUserId());
		request.setAttribute("balance", userInfo.getBalance());
		request.setAttribute("trimester", list);
		request.setAttribute("pageBean",pageBean) ;
		
		request.setAttribute("set", set);
		return new ModelAndView("/center/center_balance");
	}
	
	/**
	 * @Description 近一年账户记录
	 * @param pageIndex
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/toBalanceYear")
	public ModelAndView toBalanceYear(int set,int pageIndex,HttpServletRequest request){
		SessionInfo sessionInfo=SessionInfo.get();
		PageBean pageBean=new PageBean();
		pageBean.setPageIndex(pageIndex);
		pageBean.setPageSize(PAGESIZE);
		
		userCenterService.findRecordByPage(sessionInfo.getUserId(), pageBean,YEAR);
		
		@SuppressWarnings("unchecked")
		List<UserSpendPoints> list=(List<UserSpendPoints>) pageBean.getData();
		//获取用户余额
		UserInfo userInfo=userCenterService.findUserinfo(sessionInfo.getUserId());
		request.setAttribute("balance", userInfo.getBalance());
		request.setAttribute("year", list);
		request.setAttribute("pageBean",pageBean) ;
		
		request.setAttribute("set", set);
		return new ModelAndView("/center/center_balance_year");
	}
	
	/**
	 * @Description 收藏夹
	 * @param pageIndex
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@Lijie
	@RequestMapping("/toCollect")
	public ModelAndView toCollect(int set,int pageIndex,String category,HttpServletRequest request){
		SessionInfo sessionInfo=SessionInfo.get();
		PageBean pageBean=new PageBean();
		pageBean.setPageIndex(pageIndex);
		
		String skip=request.getParameter("skip");
		if(skip!=null&&!"".equals(skip)){
			pageBean.setPageIndex(Integer.parseInt(skip));
		}
		pageBean.setPageSize(20);
		
		userCenterService.findGoodsCollectPage(sessionInfo.getUserId(), pageBean,category);
		//获取商品
		List<Goods> goods=userCenterService.findGoodsCollect(sessionInfo.getUserId());
		@SuppressWarnings("unchecked")
		List<Goods> pageGoods=(List<Goods>) pageBean.getData();
		request.setAttribute("pageGoods", pageGoods);
		request.setAttribute("pageBean", pageBean);
		request.setAttribute("count", goods.size());
		request.setAttribute("category", category);
		//获取商品分类及该类下商品数量
		Map<String, Integer> map=new HashMap<String, Integer>();
		if(goods.size()>0){
			for(Goods gd:goods){
				if (ObjectUtil.isNotNull(gd)) {
					String cName=gd.getCategoryName();
					String[] arr=cName.split("\\,");
					for(String str:arr){
						if(map.containsKey(str)){
							map.put(str, map.get(str)+INITIAL);
						}else{
							map.put(str, INITIAL);
						}
					}
				}
			}
		}
		map.remove("");
		request.setAttribute("map", map);
		
		request.setAttribute("set", set);
		return new ModelAndView("/center/center_goods_collection");
	}
	
	/**
	 * @Description 评价管理
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月11日下午2:23:32
	 */
	@RequestMapping("/toAppraise")
	public ModelAndView toAppraise(int pageIndex,int status,int set,HttpServletRequest request){
		SessionInfo sessionInfo=SessionInfo.get();
		PageBean pageBean=new PageBean();
		pageBean.setPageIndex(pageIndex);
		pageBean.setPageSize(PAGESIZE);
		
		pcCommentService.findCommentByPage(sessionInfo.getUserId(), pageBean,status);
		
		@SuppressWarnings("unchecked")
		List<Comment> comm=(List<Comment>) pageBean.getData();
		request.setAttribute("comm", comm);
		request.setAttribute("pageBean", pageBean);
		request.setAttribute("status", status);
		
		request.setAttribute("set", set);
		return new ModelAndView("/center/center_appraise");
	}
	
	/**
	 * @Description 投诉与建议
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月12日上午11:05:32
	 */
	@RequestMapping("/toAdvise")
	public ModelAndView toAdvise(int pageIndex,int set,HttpServletRequest request){
		SessionInfo sessionInfo=SessionInfo.get();
		PageBean pageBean=new PageBean();
		pageBean.setPageIndex(pageIndex);
		pageBean.setPageSize(PAGESIZE);
		
		userCenterService.findAdviseByPage(sessionInfo.getUserId(), pageBean);
		
		@SuppressWarnings("unchecked")
		List<Feedback> list=(List<Feedback>) pageBean.getData();
		request.setAttribute("list", list);
		request.setAttribute("pageBean", pageBean);
		
		request.setAttribute("set", set);
		return new ModelAndView("/center/center_advise");
	}
	
	/**
	 * @Description 新增投诉与建议页面
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月12日上午11:05:32
	 */
	@RequestMapping("/toAddAdvise")
	public ModelAndView toaAddAdvise(int set,HttpServletRequest request){
		request.setAttribute("set", set);
		return new ModelAndView("/center/center_add_advise");
	}
	
	/**
	 * @Description 新增投诉与建议
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月12日上午11:05:32
	 */
	@RequestMapping("/addAdvise")
	public ModelAndView addAdvise(Feedback feedback){
		SessionInfo sessionInfo=SessionInfo.get();
		feedback.setUserId(sessionInfo.getUserId());
		feedback.setCreateTime(new Date());
		feedback.setStatus(STATUS);
		userCenterService.addAdvise(feedback);
		return new ModelAndView("redirect:/center/toAdvise?pageIndex=1&set=16");
	}
	
	/**
	 * @Description 删除投诉与建议
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月12日上午11:05:32
	 */
	@RequestMapping("/delAdvise")
	public ModelAndView delAdvise(long id){
		userCenterService.delAdvise(id);
		return new ModelAndView("redirect:/center/toAdvise?pageIndex=1&set=16");
	}
	
	/**
	 * @Description 可用 、已用、过期 优惠券信息
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月14日上午10:05:32
	 */
	@RequestMapping("/toCoupon")
	public ModelAndView toCoupon(int pageIndex,int set,int status,HttpServletRequest request){
		SessionInfo sessionInfo=SessionInfo.get();
		PageBean pageBean=new PageBean();
		pageBean.setPageIndex(pageIndex);
		pageBean.setPageSize(PAGESIZE);
		
		pcCouponService.findAllCoupon(sessionInfo.getUserId(), pageBean,status);
		List<Integer> list=pcCouponService.countCoupon(sessionInfo.getUserId());
		request.setAttribute("pageBean", pageBean);
		request.setAttribute("set", set);
		request.setAttribute("status", status);
		request.setAttribute("list", list);
		return new ModelAndView("/center/center_coupon");
	}
	
	/**
	 * @Description 新到账、将过期、最优惠优惠券信息
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月14日上午10:05:32
	 */
	@RequestMapping("/toCouponSort")
	public ModelAndView toCouponSort(int pageIndex,int set,int sort,HttpServletRequest request){
		SessionInfo sessionInfo=SessionInfo.get();
		PageBean pageBean=new PageBean();
		pageBean.setPageIndex(pageIndex);
		pageBean.setPageSize(PAGESIZE);
		
		pcCouponService.findSortCoupon(sessionInfo.getUserId(), pageBean, sort);
		List<Integer> list=pcCouponService.countCoupon(sessionInfo.getUserId());
		request.setAttribute("pageBean", pageBean);
		request.setAttribute("set", set);
		request.setAttribute("status", sort);
		request.setAttribute("list", list);
		return new ModelAndView("/center/center_coupon_sort");
	}
	
	/**
	 * @Description 用户购物卡
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月14日上午10:05:32
	 */
	@RequestMapping("/toShopCard")
	public ModelAndView toShopCard(int pageIndex,int set,int status,HttpServletRequest request){
		SessionInfo sessionInfo=SessionInfo.get();
		PageBean pageBean=new PageBean();
		pageBean.setPageIndex(pageIndex);
		pageBean.setPageSize(PAGESIZE);
		
		userCenterService.findShopCard(sessionInfo.getUserId(), pageBean,status);
		
		request.setAttribute("pageBean", pageBean);
		request.setAttribute("set", set);
		request.setAttribute("status", status);
		return new ModelAndView("/center/center_shop_card");
	}
	
	/**
	 * @Description 用户购物卡
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年8月14日上午10:05:32
	 */
	@RequestMapping("/addShopCard")
	public ModelAndView addShoppingCard(@RequestParam("cardNo") String cardNo,@RequestParam("cardPwd") String cardPwd,
			HttpServletRequest request){
		SessionInfo sessionInfo = SessionInfo.get();
		//绑定购物卡
		Integer status = commonShopingCardService.addShopingCardWithUserId(cardNo, cardPwd, sessionInfo.getUserId());
		if(status==0){
			request.setAttribute("msg", "绑定成功");
		}
		if(status==1){
			request.setAttribute("msg", "账号密码不正确");
		}
		if(status==2){
			request.setAttribute("msg", "该卡已绑定");
		}
		
		PageBean pageBean=new PageBean();
		pageBean.setPageIndex(1);
		pageBean.setPageSize(PAGESIZE);
		
		userCenterService.findShopCard(sessionInfo.getUserId(), pageBean,status);
		
		request.setAttribute("pageBean", pageBean);
		request.setAttribute("set", 10);
		request.setAttribute("status", 3);
		return new ModelAndView("/center/center_shop_card");
	}
	
	/**
	 * @Description 发送验证码
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年10月13日上午10:05:32
	 */
	@RequestMapping("/sendEmail")
	public String sendEmail(@RequestParam(name="email")String email,HttpServletRequest request){
		String code=userCenterService.sendEmail(email);
		request.getSession().setAttribute("emailCode", code);
		return code;
	}
	
	/**
	 * @Description 验证验证码
	 * @param request
	 * @return
	 * @author zhangh
	 * @Date 2017年10月13日上午10:05:32
	 */
	@RequestMapping("/checkCode")
	public Integer checkCode(@RequestParam(name="code")String code,@RequestParam(name="email")String email,HttpServletRequest request){
		SessionInfo sessionInfo=SessionInfo.get();
		String emailCode=(String) request.getSession().getAttribute("emailCode");
		if(!StringUtil.isEmpty(emailCode)&&code.equals(emailCode)){
			UserInfo userInfo=userCenterService.findUserinfo(sessionInfo.getUserId());
			if (ObjectUtil.isNull(userInfo.getEmail())) {
				userInfo.setAccPoints(userInfo.getAccPoints()+SystemConstant.USER.PRESENT_POINTS);
			}
			userInfo.setEmail(email);
			userCenterService.updateUserInfo(userInfo);
			return 1;
		}else {
			return 0;
		}
		
	}
	
	/**
	 * 订单评价
	 * @param comment
	 * @return    
	 * @return RespData    
	 * Date:2017年11月2日 上午11:01:17 
	 * @author hexw
	 */
	@RequestMapping("/saveOrderComment")
	public RespData saveOrderComment(Comment comment,HttpServletRequest request){
		RespData respData = new RespData();
		SessionInfo sessionInfo=SessionInfo.get();
		comment.setUserId(sessionInfo.getUserId());
		respData.setData(pcCommentService.insertComment(comment));
		return respData;
	}
}

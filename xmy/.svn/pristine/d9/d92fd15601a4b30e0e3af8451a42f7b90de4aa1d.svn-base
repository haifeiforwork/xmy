package com.zfj.xmy.wap.web.controller.payment;

import javax.persistence.criteria.CriteriaBuilder.In;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;











import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.util.ObjectUtils;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.alibaba.fastjson.JSONObject;
import com.google.gson.JsonObject;
import com.zfj.base.commons.mini.bean.RespData;
import com.zfj.base.exception.BusinessException;
import com.zfj.base.util.web.WebUtil;
import com.zfj.xmy.order.service.common.PayService;
import com.zfj.xmy.order.service.pc.PcOrderService;
import com.zfj.xmy.pay.persistence.pojo.vo.LaunchPayGoodsVo;
import com.zfj.xmy.wap.web.common.SessionInfo;

/**
 * 支付
 * @author cj
 * @createDate 2017年11月6日
 *
 */
@Controller
@RequestMapping("/payment")
public class PaymentController {
	
	@Autowired
	private PayService payService;
	@Autowired
	private PcOrderService orderService;
	
	private final static String WX_PAYMENT = "payment/wx_payment";
	
	/**
	 * 支付
	 * @param request
	 * @param response
	 * @param launchPayGoodsVo
	 * @return
	 */
	@RequestMapping("/payment/{payType}")
	@ResponseBody
	public Object payment(HttpServletRequest request, HttpServletResponse response, LaunchPayGoodsVo launchPayGoodsVo,
			@PathVariable(name="payType",required=true) Integer payType){
		
		SessionInfo sessionInfo = SessionInfo.get();
		Long userId = 0L;
		if(payType == 5){
			RespData resp = new RespData();
			if(sessionInfo == null || sessionInfo.getUserId() == null){
				userId =  sessionInfo.getUserId();
			}
			orderService.updateOrder(Long.valueOf(launchPayGoodsVo.getOrderid()), payType, launchPayGoodsVo.getPayAmount(),userId);
			resp.setResultCode(RespData.CODE_SUCCESS);
			return resp;
		}else{
			if(sessionInfo == null || sessionInfo.getUserId() == null){
				if(launchPayGoodsVo.getPayAmount() != null && launchPayGoodsVo.getPayAmount().doubleValue() > 0){
					throw new BusinessException(100,"SESSION_LOST");
				}
			}else{
				userId = sessionInfo.getUserId();
			}
			String ip = WebUtil.getRealIp();
			launchPayGoodsVo.setPaytype(payType);
			launchPayGoodsVo.setClientIp(ip);
			Object returnStr = payService.beforebuyGoods(launchPayGoodsVo,userId);
			return returnStr;
		}
	}
	
}

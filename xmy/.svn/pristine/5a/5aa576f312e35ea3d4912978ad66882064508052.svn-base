<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd  http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!--Redis配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxWaitMillis" value="${spring.redis.pool.max-wait}" />
		<property name="maxTotal" value="${spring.redis.pool.max-active}" />
		<!--最大空闲连接数-->
		<property name="maxIdle" value="${spring.redis.pool.max-idle}" />
		<!--初始化连接数-->
		<property name="minIdle" value="10"/>
		<!--多长空闲时间之后回收空闲连接 -->
		<property name="minEvictableIdleTimeMillis" value="60000"/>
		<!--对拿到的connection进行validateObject校验-->
		<property name="testOnBorrow" value="true" />
		<!--在进行returnObject对返回的connection进行validateObject校验-->
		<property name="testOnReturn" value="true" />
		<!--定时对线程池中空闲的链接进行validateObject校验-->
		<property name="testWhileIdle" value="true" />
	</bean>

	<!--Redis连接池 -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${spring.redis.host}" type="java.lang.String"/>
		<constructor-arg index="2" value="${spring.redis.port}" type="int" />
		<constructor-arg index="3" value="${spring.redis.timeout}" type="int" />
		<!-- <constructor-arg index="4" value="${spring.redis.password}" /> -->
	</bean>

	<!--管理验证信息的bean -->
	<bean id="tokenManager" class="com.zfj.xmy.redis.RedisTokenManager">
		<!--Token失效时间 -->
		<property name="tokenExpireSeconds" value="${spring.redis.expireSeconds}" />
		<!--Redis客户端 -->
		<property name="jedisPool" ref="jedisPool" />
		<!-- 是否单点登录 -->
		<property name="singleTokenWithUser" value="false"/>
	</bean>

	<!--管理feign重试幂等性请求唯一标识 -->
	<bean id="uniqueIdManager" class="com.zfj.xmy.redis.UniqueIdManager">
		<!--Redis客户端 -->
		<property name="jedisPool" ref="jedisPool" />
	</bean>



	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		  p:database="1"
		  p:hostName="${spring.redis.host}"
		  p:port="${spring.redis.port}"
		  p:poolConfig-ref="jedisPoolConfig"
		  destroy-method="destroy" />
<!-- p:password="${spring.redis.password}" -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory"   ref="connectionFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<!--是否开启事务支持 multi exec -->
		<property name="enableTransactionSupport" value="true" />
	</bean>

	<bean id='defaultCacheManager' class='com.zfj.xmy.redis.cache.manager.DefaultRedisCacheManager'>
		<constructor-arg name="redisOperations" ref="redisTemplate" />
		<!--是否开启加入spring的事物管理，默认false-->
		<property name="transactionAware" value="false"/>
	</bean>

</beans>
